<?xml version="1.0"?>
<project name="MongoVision" default="build">

	<property name="root" location="${basedir}/.." />

	<property file="${root}/build/private.properties" />
	<property file="${root}/build/custom.properties" />
	
	<property name="mongovision" location="${root}/components/mongovision" />
	
	<property name="cache" location="${root}/build/cache" />
	<property name="cache.mongovision" location="${cache}/${component}" />
	<property name="cache.maven.pom" location="${cache}/maven/pom" />
	<property name="cache.maven.build" location="${cache}/maven/build" />

	<property name="distribution" location="${root}/build/distribution" />
	<property name="distribution.content" location="${distribution}/content" />

	<macrodef name="googledrive">
		<attribute name="suffix" />
		<sequential>
			<copy
				file="${distribution}/${component}-${component.version}${component.version.postfix}@{suffix}"
				todir="${googledrive.repo}/${googledrive.section}/${component.version}${component.version.postfix}"
				failonerror="false" />
		</sequential>
	</macrodef>
	
	<property name="googlecode" location="${root}/dependencies/libraries/python/googlecode_upload.py" />
	<macrodef name="googlecode">
		<attribute name="description" />
		<attribute name="label" />
		<attribute name="suffix" />
		<sequential>
			<exec executable="${googlecode}">
				<arg value="--project=mongo-vision" />
				<arg value="--user=${googlecode.username}" />
				<arg value="--password=${googlecode.password}" />
				<arg value="--summary=@{description} for version ${component.version}${component.version.postfix}" />
				<arg value="--labels=${component.version.short}${component.version.short.postfix},@{label}" />
				<arg value="${distribution}/${component}-${component.version}${component.version.postfix}@{suffix}" />
			</exec>
		</sequential>
	</macrodef>

	<target name="distribution" depends="deploy-maven" description="Create Sincerity container">
		<copy todir="${distribution.content}/configuration/sincerity">
			<fileset dir="sincerity" />
			<filterchain>
				<replacetokens>
					<token key="VERSION" value="${component.version}${component.version.postfix}" />
					<token key="SINCERITY.VERSION" value="${sincerity.version}" />
					<token key="PRUDENCE.VERSION" value="${prudence.version}" />
					<token key="RESTLET.VERSION" value="${restlet.version}" />
				</replacetokens>
			</filterchain>
		</copy>
		<exec executable="${sincerity}">
			<arg value="container:create" />
			<arg value="--force" />
			<arg value="${distribution.content}" />
			<arg value="${sincerity.template}" />
			<arg value=":" />
			<arg value="repositories:attach" />
			<arg value="public" />
			<arg value="${component}" />
			<arg value="maven" />
			<arg value="${distribution.repo}" />
			<arg value=":" />
			<arg value="repositories:attach" />
			<arg value="public" />
			<arg value="three-crickets" />
			<arg value="maven" />
			<arg value="${dependencies.repo}" />
			<arg value=":" />
			<arg value="artifacts:install" />
			<arg value=":" />
			<arg value="repositories:detach" />
			<arg value="public" />
			<arg value="${component}" />
		</exec>
	</target>
	
	<target name="package-zip" depends="distribution" description="Create zip distribution package">
		<zip destfile="${distribution}/${component}-${component.version}${component.version.postfix}.zip">
			<zipfileset dir="${distribution.content}" excludes="cache/, logs/, sincerity" />
			<zipfileset dir="${distribution.content}" includes="sincerity" filemode="755" />
		</zip>
	</target>

	<target name="package-platform-installers" depends="distribution" description="Create InstallBuilder installer" if="installbuilder">
		<copy todir="${cache}" file="${root}/build/installbuilder/${component}.xml">
			<filterchain>
				<replacetokens>
					<token key="VERSION" value="${component.version}${component.version.postfix}" />
				</replacetokens>
			</filterchain>
		</copy>
		<exec executable="${installbuilder}">
			<arg value="build" />
			<arg value="${cache}/${component}.xml" />
			<arg value="windows" />
			<arg value="--license" />
			<arg value="./installbuilder/license.xml" />
		</exec>
		<exec executable="${installbuilder}">
			<arg value="build" />
			<arg value="${cache}/${component}.xml" />
			<arg value="osx" />
			<arg value="--license" />
			<arg value="./installbuilder/license.xml" />
			<arg value="--setvars" />
			<arg value="project.outputDirectory=${cache}" />
		</exec>
		<zip destfile="${distribution}/${component}-${component.version}${component.version.postfix}-osx-installer.zip">
			<zipfileset dir="${cache}/${component}-${component.version}${component.version.postfix}-osx-installer.app" prefix="${component}-${component.version}${component.version.postfix}-osx-installer.app" />
		</zip>
		<chmod perm="ugo+rx">
			<fileset dir="${distribution}" includes="*.run" />
		</chmod>
	</target>

	<target name="package" depends="package-zip, package-platform-installers" description="Create all packages and installers" />

	<target name="deploy-maven" if="maven" description="Deploy to Maven repository">
		<delete dir="${cache.maven.pom}" />
		<delete dir="${cache.maven.build}" />
		<copy todir="${cache.maven.pom}">
			<fileset dir="${root}/build/maven" excludes="**/*~" />
			<filterchain>
				<replacetokens>
					<token key="VERSION" value="${component.version}${component.version.postfix}" />
					<token key="DEPENDENCIES" value="${dependencies.repo}" />
					<token key="SINCERITY.MONGODB.VERSION" value="${sincerity.mongodb.version}" />
					<token key="PRUDENCE.VERSION" value="${prudence.version}" />
					<token key="RESTLET.VERSION" value="${restlet.version}" />
					<token key="ROOT" value="${root}" />
					<token key="CACHE" value="${cache.maven.build}" />
				</replacetokens>
			</filterchain>
		</copy>
		<copy todir="${cache.mongovision}">
			<fileset dir="${mongovision}" excludes="**/*~, **/*.js" />
		</copy>
		<copy todir="${cache.mongovision}">
			<fileset dir="${mongovision}" includes="**/*.js" />
			<filterchain>
				<replacetokens>
					<token key="VERSION" value="${component.version}${component.version.postfix}" />
				</replacetokens>
			</filterchain>
		</copy>
		<exec executable="${maven}" dir="${cache.maven.pom}">
			<arg value="deploy" />
			<arg value="-DaltDeploymentRepository=default::default::${distribution.repo}" />
		</exec>
	</target>

	<target name="deploy-googledrive" if="googledrive.repo" description="Deploy to Google Drive">
		<googledrive suffix="-installer.jar" />
		<googledrive suffix=".zip" />
		<googledrive suffix=".rpm" />
		<googledrive suffix=".deb" />
		<googledrive suffix="-osx-installer.zip" />
		<googledrive suffix="-windows-installer.exe" />
	</target>
	
	<target name="deploy-googlecode" if="googlecode.password" description="Deploy to Google Code">
		<!--<googlecode description="Universal installer" label="universal" suffix="-installer.jar" />-->
		<googlecode description="Zip distribution" label="zip" suffix=".zip" />
		<!--<googlecode description="RPM package" label="rpm" suffix=".rpm" />
		<googlecode description="Debian package" label="deb" suffix=".deb" />
		<googlecode description="Mac OS X installer" label="mac" suffix="-osx-installer.zip" />
		<googlecode description="Windows installer" label="windows" suffix="-windows-installer.exe" />-->
	</target>

	<target name="build" depends="distribution" description="Build distribution" />
	
	<target name="clean" description="Clean">
		<delete dir="${cache}" />
		<delete dir="${distribution}" />
	</target>
	
	<target name="rebuild" depends="clean, build" description="First clean and then build distribution" />
	
	<target name="dirty" description="Quick-and-dirty update of the content">
		<copy todir="${distribution.content}">
			<fileset dir="${mongovision}" />
		</copy>
	</target>

</project>
